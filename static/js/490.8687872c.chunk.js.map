{"version":3,"file":"static/js/490.8687872c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid black;\n  border-radius: 5px;\n  padding: 10px;\n  width: 250px;\n  margin-top: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  border: 1px solid #c2c2c2;\n  border-radius: 5px;\n  padding: 6px;\n`;\n\nexport const Label = styled.label`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const Btn = styled.button`\n  width: 100px;\n  margin-top: 10px;\n  background-color: #3f51b5;\n  border: none;\n  border-radius: 5px;\n  color: #fff;\n  padding: 6px 12px;\n  font-size: 14px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  cursor: pointer;\n  &:hover {\n    color: black;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  useGetContactsQuery,\n  useAddContactsMutation,\n} from '../../redux/services';\nimport { Form, Label, Input, Btn } from './ContactForm.styled';\nimport { toast } from 'react-toastify';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactsMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isInContacts = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      toast.error(`${name} is already in contacts.`);\n      reset();\n      return;\n    }\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    if (!isInContacts) {\n      addContact(newContact);\n      toast.success('Contact added');\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Btn type=\"submit\" disabled={isLoading}>\n        Add contact\n      </Btn>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 20px;\n  width: 260px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 16px;\n  :not(:first-of-type) {\n    margin-top: 10px;\n  }\n`;\n\nexport const Btn = styled.button`\n  background-color: #3f51b5;\n  border: none;\n  border-radius: 5px;\n  color: #fff;\n  padding: 6px 12px;\n  font-size: 14px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: black;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/contactsSlice';\nimport {\n  useGetContactsQuery,\n  useDeleteContactsMutation,\n} from '../../redux/services';\nimport { List, ListItem, Btn } from './ContactList.styled';\nimport { toast } from 'react-toastify';\n\nconst ContactList = () => {\n  const { data: contacts, isSuccess } = useGetContactsQuery();\n  const [deleteContact, { isLoading }] = useDeleteContactsMutation();\n\n  const filter = useSelector(getFilter);\n\n  if (!isSuccess) {\n    return;\n  }\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    const result = contacts.filter(({ name }) => {\n      const normalizedName = name.toLowerCase();\n      return normalizedName.includes(normalizedFilter);\n    });\n    return result;\n  };\n\n  const onDeleteContact = id => {\n    deleteContact(id);\n    toast.success('Contact deleted');\n  };\n\n  return (\n    <List>\n      {contacts &&\n        getFilteredContacts().map(({ id, name, number }) => (\n          <ListItem key={id} id={id} name={name} number={number}>\n            {name}: {number}\n            <Btn\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n              disabled={isLoading}\n            >\n              Delete\n            </Btn>\n          </ListItem>\n        ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 500;\n  margin-top: 20px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 15px;\n  border: 1px solid #c2c2c2;\n  border-radius: 5px;\n  padding: 6px;\n`;\n","import { Label, Input } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter, getFilter } from '../../redux/contactsSlice';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" name=\"filter\" value={value} onChange={changeFilter} />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { PhonebookContainer } from '../components/App/App.styled';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\n// import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function ContactsPage() {\n  return (\n    <PhonebookContainer>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </PhonebookContainer>\n  );\n}\n"],"names":["Form","styled","Input","Label","Btn","useState","name","setName","number","setNumber","contacts","useGetContactsQuery","data","useAddContactsMutation","addContact","isLoading","handleChange","e","target","value","reset","onSubmit","preventDefault","isInContacts","find","contact","toLowerCase","toast","type","onChange","pattern","title","required","disabled","List","ListItem","isSuccess","useDeleteContactsMutation","deleteContact","filter","useSelector","getFilter","normalizedFilter","includes","getFilteredContacts","map","id","onClick","onDeleteContact","dispatch","useDispatch","setFilter","currentTarget","ContactsPage"],"sourceRoot":""}